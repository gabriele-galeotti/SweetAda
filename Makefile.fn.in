
#
# Functions sub-Makefile
#
# Copyright (C) 2020-2023 Gabriele Galeotti
#
# This work is licensed under the terms of the MIT License.
# Please consult the LICENSE.txt file located in the top-level directory.
#

#
# Environment variables:
# NULL
# OSTYPE
# VERBOSE
# ECHO
# SED
#

BRIEFTEXT_NSPACE := 12
#                          123456789012
BRIEFTEXT_SPACES := $(NULL)            $(NULL)
BRIEFTEXT_CHRMSK := $(NULL)............$(NULL)

#
# echo-print
#
# Usage:
# $(call echo-print,"something to print")
#
# When calling echo-print, the string should be always protected by
# double-quotes.
#
ifeq ($(OSTYPE),cmd)
# discard delimiting double-quotes
echo-print = $(ECHO) $1| $(SED) -e "s|^\x22||" -e "s|\x22$$||"
else
echo-print = $(ECHO) $1
endif

#
# brief-text
#
# Usage:
# $(call brief-text,"text1","text2")
#
# Print the two arguments in brief-mode:
# - 1st argument, maximum BRIEFTEXT_NSPACE characters with padding
# - a space
# - 2nd argument
#
brief-text = $(call echo-print,"$1 $2")|$(SED)                            \
               -e "s|^\([[:graph:]]*\)|\1$(BRIEFTEXT_SPACES)|"            \
               -e "s|^\($(BRIEFTEXT_CHRMSK)\)[[:graph:]]* *\(.*\)|\1 \2|" \

#
# brief-command
#
# Usage:
# $(call brief-command,<command_and_arguments>,"NAME","arguments to print")
#
# NAME:
# should be a short name of the command, maximum BRIEFTEXT_NSPACE letters
#
# This function will run "command and arguments", and either:
# - if VERBOSE=Y print the whole command and arguments
# - otherwise print a brief output in the format "NAME arguments to print"
# If called with only a single argument, will print nothing in brief-mode.
#
ifeq ($(OSTYPE),cmd)
brief-command = $(if $(findstring Y,$(VERBOSE)),$1,$(if $(2),$(call brief-text,$2,$3)&$1,@$1))
else
brief-command = $(if $(findstring Y,$(VERBOSE)),$1,$(if $(2),$(call brief-text,$2,$3);$1,@$1))
endif

#
# ls-dirs
#
# Usage:
# $(call ls-dirs)
#
# Print all directories in the current working directory.
#
ifeq ($(OSTYPE),cmd)
ls-dirs = DIR /A:D /B *
else
ls-dirs = ls -A -d */ | $(SED) -e "s|/\$$||"
endif

