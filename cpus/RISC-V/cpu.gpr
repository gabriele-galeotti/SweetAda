
-------------------------------------------------------------------------------
-- SweetAda GPRbuild project file
--
-- Copyright (C) 2020-2025 Gabriele Galeotti
--
-- This work is licensed under the terms of the MIT License.
-- Please consult the LICENSE.txt file located in the top-level directory.
-------------------------------------------------------------------------------

with "configure";
with "gprbuild_tc";

library project Cpu is

   ----------------------------------------------------------------------------
   -- Definitions
   ----------------------------------------------------------------------------

   Kernel_Parent_Path := External ("KERNEL_PARENT_PATH", ".");
   Include_Directories := Split (External ("GPR_INCLUDES", ""), " ");
   Source_Files_Exist := "";

   RiscV := External ("RISCV");

   -- shorthands
   Obj_Dir := Kernel_Parent_Path & "/" & Configure.Object_Directory;
   Lib_Dir := Kernel_Parent_Path & "/" & Configure.Library_Directory;

   for Target use Configure.Toolchain_Name;
   for Source_Dirs use Include_Directories & (".");

   Asm := "";
   Asm_Files := ();
   Ada := "";
   Ada_Files := ();

   case Configure.Use_LibGCC is
      when "Y" =>
         null;
      when others =>
         Source_Files_Exist := "Y";
         Asm := "Y";
         Asm_Files := Asm_Files & ("div.S");
         case RiscV is
            when "RV32" =>
               Ada := "Y";
               Ada_Files := Ada_Files & (
                  "gcc.ads", "gcc-types.ads",
                  "libgcc.adb", "libgcc.ads",
                  "libgcc-udivmoddi4.adb",
                  "libgcc-divdi3.adb",
                  "libgcc-moddi3.adb",
                  "libgcc-udivdi3.adb",
                  "libgcc-umoddi3.adb"
                  );
            when others =>
               null;
         end case;
   end case;

   case Asm is
      when "Y" =>
         for Languages use project'Languages & ("Asm_Cpp");
         for Source_Files use project'Source_Files & Asm_Files;
      when others =>
         null;
   end case;

   case Ada is
      when "Y" =>
         for Languages use project'Languages & ("Ada");
         for Source_Files use project'Source_Files & Ada_Files;
      when others =>
         null;
   end case;

   case Source_Files_Exist is
      when "Y" =>
         null;
      when others =>
         for Externally_Built use "true";
   end case;

   ----------------------------------------------------------------------------
   -- Naming
   ----------------------------------------------------------------------------

   package Naming renames Gprbuild_Tc.Naming;

   ----------------------------------------------------------------------------
   -- Builder
   ----------------------------------------------------------------------------

   package Builder renames Gprbuild_Tc.Builder;

   ----------------------------------------------------------------------------
   -- Compiler
   ----------------------------------------------------------------------------

   package Compiler renames Gprbuild_Tc.Compiler;

   ----------------------------------------------------------------------------
   -- Library
   ----------------------------------------------------------------------------

   for Library_Name use "cpu";

   for Library_Kind use Gprbuild_Tc.Library_Kind;
   for Library_Support use Gprbuild_Tc.Library_Support;
   for Library_Builder use Gprbuild_Tc.Library_Builder;
   for Archive_Builder use Gprbuild_Tc.Archive_Builder;
   for Object_Dir use project'Project_Dir & Obj_Dir;
   for Library_Dir use project'Project_Dir & Lib_Dir;

end Cpu;
